---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8081/api
    description: Generated server url
paths:
  "/topic/{topic}":
    post:
      tags:
        - topic-controller
      operationId: newTopic
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  "/messages/send":
    post:
      tags:
        - message-controller
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Message"
        required: true
      responses:
        '200':
          description: OK
  "/topology":
    get:
      tags:
        - topology-controller
      operationId: getTopology
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Cluster"
  "/topic":
    get:
      tags:
        - topic-controller
      operationId: getAllTopics
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TopicsDto"
  "/messages":
    get:
      tags:
        - message-controller
      operationId: getMessages
      parameters:
        - name: topic
          in: query
          required: true
          schema:
            type: string
        - name: subscription
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/MessagesDto"
components:
  schemas:
    Message:
      required:
        - topic
      type: object
      properties:
        key:
          type: string
        payload:
          type: string
        topic:
          type: string
    Cluster:
      type: object
      properties:
        id:
          type: string
        tenants:
          type: array
          items:
            "$ref": "#/components/schemas/Tenant"
    Namespace:
      type: object
      properties:
        id:
          type: string
        topics:
          type: array
          items:
            "$ref": "#/components/schemas/Topic"
    Tenant:
      type: object
      properties:
        id:
          type: string
        namespaces:
          type: array
          items:
            "$ref": "#/components/schemas/Namespace"
    Topic:
      type: object
      properties:
        topic:
          type: string
        localName:
          type: string
        namespace:
          type: string
        tenant:
          type: string
        persistent:
          type: boolean
    TopicsDto:
      type: object
      properties:
        topics:
          type: array
          items:
            type: string
    MessageDto:
      type: object
      properties:
        key:
          type: string
        payload:
          type: string
    MessagesDto:
      type: object
      properties:
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/MessageDto"
